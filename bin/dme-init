#!/usr/bin/env node

var program = require('commander') // command
var chalk = require('chalk') // console
var ora = require('ora') // loading
var rm = require('rimraf').sync // rm -rf
var git = require('download-git-repo') // git clone
var path = require('path') // git clone
var exists = require('fs').existsSync
var inquirer = require('inquirer')
var generate = require('../lib/generate')

/**
 * Usage
 */
program.usage('[project-name]')

/**
 * Help doc
 */
program.on('--help', function () {
  console.log('  Examples:\n')
  console.log(chalk.gray('    # create a project from dme template'))
  console.log('    $ dme init my-project\n')
  console.log(chalk.gray('    # create a project from local template'))
  console.log('    $ dme init my-project /code/github/local-template\n')
  console.log(chalk.gray('    # create a project from git\'s origin template'))
  console.log('    $ dme init my-project BozhongFE/xxx-template')
})

/**
 * Help (no args)
 */
program.parse(process.argv)
if (program.args.length < 1) return program.help()

/**
 * Settings
 */
var projectName = program.args[0]
var templatePath = program.args[1] || 'unclay/dme-template'
var dest = path.resolve(process.cwd(), projectName || '.')
if (exists(dest)) {
  inquirer.prompt([{
    type: 'confirm',
    message: 'Target directory exists. Continue?',
    name: 'power'
  }]).then(answers => {
    if (answers.power) {
      run()
    }
  })
} else {
  run()
}

/**
 * run
 */
function run () {
  var uid = Math.random().toString(35).substr(2, 10)
  var tmpPath = '/tmp/dme-' + uid
  // is local
  if (exists(templatePath)) {
    generate(projectName, templatePath, process.cwd(), function (err) {
      if (err) console.error(err)
      console.log('dme init success')
    })
  } else {
    var spinner = ora(`Downloading ${templatePath}`);
    spinner.start()
    // return require('../lib/generate')(projectName, '/code/project/dme')
    git(templatePath, tmpPath, {}, function(err) {
      spinner.stop()
      if (err) {
        return console.error(chalk.red(err))
      }
      console.log(`download ${templatePath.split('/')[1]} success`)
      process.on('exit', function () {
        rm('/tmp/dme-' + uid)
      })
      require('../lib/generate')(projectName, tmpPath, process.cwd(), err => {
        if (err) {
          err.check = err.path.replace(tmpPath, templatePath)
          console.error(err)
        } else
          console.log('dme init success')
      })
    })
  }
  
}

